C51 COMPILER V9.60.0.0   MAIN                                                              11/05/2021 12:10:48 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: E:\Work\ST\Keil_51_arm\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          /*************************************************************************************
   2          
   3          *
   4          实验现象：下载程序后，数码管显示红外遥控键值数据
   5                
   6          接线说明： (具体接线图可见开发攻略对应实验的“实验现象”章节)
   7                 1，单片机-->红外接收模块
   8                    P32-->J11
   9                 2，单片机-->动态数码管模块
  10                    J22-->J6
  11                  P22-->J9(A)
  12                  P23-->J9(B)
  13                  P24-->J9(C) 
  14            
  15          注意事项：红外遥控器上的电池绝缘隔片要拿掉                    
  16          
  17                                
  18          **************************************************************************************
  19          
  20          */
  21          
  22          #include "reg52.h"       //此文件中定义了单片机的一些特殊功能寄存器
  23            
  24          
  25          typedef unsigned int u16;   //对数据类型进行声明定义
  26          typedef unsigned char u8;
  27          
  28          sbit LSA=P2^2;
  29          sbit LSB=P2^3;
  30          sbit LSC=P2^4;
  31          
  32          sbit IRIN=P3^2;   //接收
  33          sbit IR_TX = P2^4;         //定义红外发射端口
  34          
  35          u8 IrValue[6];
  36          u8 Time;
  37          
  38          u8 DisplayData[8];
  39          u8 code smgduan[17]={
  40          0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,
  41          0x7f,0x6f,0x77,0x7c,0x39,0x5e,0x79,0x71,0X76};
  42          //0、1、2、3、4、5、6、7、8、9、A、b、C、d、E、F、H的显示码
  43          
  44          
  45          
  46          
  47          static bit OP;        //红外发射管的亮灭
  48          static unsigned int count;       //延时计数器
  49          static unsigned int endcount; //终止延时计数
  50          static unsigned char flag;      //红外发送标志
  51          char iraddr1;  //十六位地址的第一个字节
  52          char iraddr2;  //十六位地址的第二个字节
  53            
  54             unsigned char IR_Data[] = {0x22,0xdd,0x00,0xff}        ;//待发数据
  55             unsigned char num;
C51 COMPILER V9.60.0.0   MAIN                                                              11/05/2021 12:10:48 PAGE 2   

  56             
  57          /*******************************************************************************
  58          * 函 数 名         : delay
  59          * 函数功能       : 延时函数，i=1时，大约延时10us
  60          *******************************************************************************/
  61          void delay(u16 i)
  62          {
  63   1        while(i--); 
  64   1      }
  65          void delay0()
  66          {
  67   1        int i,j;
  68   1        for(i=0;i<400;i++)
  69   1        {
  70   2          for(j=0;j<100;j++)
  71   2          {
  72   3          }
  73   2        }
  74   1      }
  75          //倒序
  76          unsigned char Convert_Byte(unsigned char Data) 
  77          {
  78   1      char i;
  79   1      unsigned char Data1;
  80   1      Data1 = Data;
  81   1      Data = 0x00;
  82   1      
  83   1      for(i = 0 ; i<(sizeof(char)*8/2) ; i++)
  84   1      {
  85   2      Data = Data | (Data1&(0X80>>i))>>(7-i*2);
  86   2      Data = Data | (Data1&(0X01<<i))<<(7-i*2);
  87   2      }
  88   1      
  89   1      return  Data;
  90   1      
  91   1      }
  92          /*******************************************************************************
  93          * 函数名         :DigDisplay()
  94          * 函数功能     :数码管显示函数
  95          * 输入           : 无
  96          * 输出           : 无
  97          *******************************************************************************/
  98          void DigDisplay()
  99          {
 100   1        u8 i;
 101   1        for(i=0;i<3;i++)
 102   1        {
 103   2          switch(i)  //位选，选择点亮的数码管，
 104   2          {
 105   3            case(0):
 106   3              LSA=1;LSB=1;LSC=1; break;//显示第0位  
 107   3            case(1):
 108   3              LSA=0;LSB=1;LSC=1; break;//显示第1位
 109   3            case(2):
 110   3              LSA=1;LSB=0;LSC=1; break;//显示第2位 
 111   3          }
 112   2          P0=DisplayData[i];//发送数据
 113   2          delay(100); //间隔一段时间扫描  
 114   2          P0=0x00;//消隐
 115   2        }   
 116   1      }
 117          
C51 COMPILER V9.60.0.0   MAIN                                                              11/05/2021 12:10:48 PAGE 3   

 118          
 119          /*******************************************************************************
 120          * 函数名         : IrInit()
 121          * 函数功能       : 初始化红外线接收
 122          * 输入           : 无
 123          * 输出           : 无
 124          *******************************************************************************/
 125          
 126          void IrInit()
 127          {
 128   1        IT0=1;//下降沿触发
 129   1        EX0=1;//打开中断0允许
 130   1        EA=1; //打开总中断
 131   1      
 132   1        IRIN=1;//初始化端口
 133   1      }
 134          
 135          
 136          //============================================================================
 137          void T0_init()        //初始化定时器0
 138          {
 139   1              TMOD = 0x01;
 140   1              ET0 = 1;
 141   1              EA = 1;
 142   1      }
 143          void T1_Init(void)                //13微秒@11.0592MHz
 144          {
 145   1              TMOD &= 0x0F;                //设置定时器模式
 146   1              TMOD |= 0x20;                //设置定时器模式
 147   1              TL1 = 0xF4;                //设置定时初始值  38KHz
 148   1              TH1 = 0xF4;                //设置定时重载值
 149   1              TF1 = 0;                //清除TF1标志
 150   1              TR1 = 1;                //定时器1开始计时
 151   1      }
 152          
 153          /****中断产生红外发射不同时长延时函数560us 1680us 4500us 9000us*****/
 154          
 155          void IR_TXD_time( unsigned char th0,tl0)
 156          {
 157   1                      TH0 = th0;
 158   1                      TL0 = tl0;
 159   1                      TR0 = 1;  //打开定时器计时
 160   1                      IR_TX = 1;
 161   1                      while(TF0 == 0); //延时，等待产生中断
 162   1                      TF0 = 0;
 163   1                      TR0 = 0;
 164   1                      TR1 = 0;
 165   1                      IR_TX = 1;//结束时拉高发射端口，结束发射
 166   1      }
 167          /*********红外发送4字节数据函数**********/
 168          
 169          void IR_Send_4B_Date(unsigned char *p)
 170          {
 171   1              unsigned char i,j;         
 172   1              ET1 = 1; TR1 = 1;        //打开T1中断，产生38KHz频率波，调制产生高电平信号
 173   1              IR_TXD_time(0xdf,0x9a);// 产生9000us信号
 174   1              ET1 = 0;//关闭38KHz频率波，调制产生低电平信号 ，下同
 175   1              IR_TXD_time(0xef,0xcd);//  产生4500us信号
 176   1              for(i = 0 ; i < 4 ; i++)
 177   1              {
 178   2                      for(j = 0x01 ; j != 0 ; j <<= 1)//发送32位数据
 179   2                      {
C51 COMPILER V9.60.0.0   MAIN                                                              11/05/2021 12:10:48 PAGE 4   

 180   3                              ET1 = 1; TR1 = 1;
 181   3                              IR_TXD_time(0xfe,0x08);//  产生560us高电平信号
 182   3                              ET1 = 0;
 183   3                              if(*(p+i) & j) //按位与是1则
 184   3                                      IR_TXD_time(0xfa,0x4c);//  产生1680us低电平信号
 185   3                               else
 186   3                                      IR_TXD_time(0xfe,0x3f);//  产生560us低电平信号
 187   3                      }
 188   2              }
 189   1              ET1 = 1;TR1 = 1;
 190   1              IR_TXD_time(0xfd,0xfc);//  产生560us高电平信号，结束32位数据发送
 191   1              ET1 = 0;
 192   1      }
 193          
 194          
 195          
 196          void key_send(void){
 197   1      
 198   1                      P3 = 0x0f;
 199   1                      if(P3 != 0x0f)
 200   1                      {
 201   2                              IR_TXD_time(0x8f,0x9a);// 延时消抖
 202   2                              if(P3 !=0x0f)
 203   2                              {  
 204   3                                      num = P3&0x0f;
 205   3                              }
 206   2      
 207   2                      if(num == 0x0e)           //我家机顶盒的遥控数据，简单测试四个键值
 208   2                        {
 209   3                          IR_Data[2] =Convert_Byte(0xdc)   ; 
 210   3                          IR_Data[3] = ~IR_Data[2];
 211   3                        } //        电源
 212   2                      else if(num == 0x0d)
 213   2                        {
 214   3                          IR_Data[2] = Convert_Byte(0x99)  ; 
 215   3                          IR_Data[3] = ~IR_Data[2];
 216   3                        }//左移
 217   2                      else if(num == 0x0b)
 218   2                        {
 219   3                          IR_Data[2] = Convert_Byte(0xc1)  ; 
 220   3                          IR_Data[3] = ~IR_Data[2];
 221   3                        } //右移
 222   2                      else if(num == 0x07)
 223   2                        {
 224   3                          IR_Data[2] = Convert_Byte(0xd2)  ; 
 225   3                          IR_Data[3] = ~IR_Data[2];
 226   3                        }  //下翻
 227   2                      IR_Send_4B_Date(IR_Data); //发送
 228   2                      IR_TXD_time(0xff,0x01);// 延时间隔连发
 229   2                      }          
 230   1      
 231   1      
 232   1      
 233   1      }
 234          void S_R(void){
 235   1            P3 = 0x0f;
 236   1            if(P3 != 0x0f)
 237   1          {
 238   2            IR_TXD_time(0x8f,0x9a);// 延时消抖
 239   2           if(P3 !=0x0f)
 240   2             {  
 241   3                    num = P3&0x0f;
C51 COMPILER V9.60.0.0   MAIN                                                              11/05/2021 12:10:48 PAGE 5   

 242   3              }
 243   2      
 244   2          if(num == 0x0d)
 245   2            {
 246   3              IR_Data[0] =Convert_Byte(IR_Data[0])   ; 
 247   3              IR_Data[1] = ~IR_Data[0];
 248   3              IR_Data[2] =IrValue[2]; 
 249   3              IR_Data[3] = ~IR_Data[2];
 250   3            } 
 251   2      
 252   2            IR_Send_4B_Date(IR_Data); //发送
 253   2            IR_TXD_time(0xff,0x01);// 延时间隔连发
 254   2            }          
 255   1                             
 256   1      
 257   1      
 258   1      
 259   1      }
 260          //========================================================================================
 261          /*******************************************************************************
 262          * 函 数 名       : main
 263          * 函数功能     : 主函数
 264          * 输    入       : 无
 265          * 输    出       : 无
 266          *******************************************************************************/
 267          void main()
 268          { 
 269   1        IrInit();
 270   1      
 271   1         T0_init();
 272   1         T1_Init();
 273   1         
 274   1        while(1)
 275   1        { 
 276   2          DisplayData[0] = smgduan[Convert_Byte(IrValue[2])/16];
 277   2          DisplayData[1] = smgduan[Convert_Byte(IrValue[2])%16];
 278   2          DisplayData[2] = smgduan[16];
 279   2            DigDisplay(); 
 280   2            S_R();    
 281   2        }   
 282   1      }
 283          //中断=======================================================================================
 284          /*******************************************************************************
 285          * 函数名         : ReadIr()
 286          * 函数功能       : 读取红外数值的中断函数
 287          * 输入           : 无
 288          * 输出           : 无
 289          *******************************************************************************/
 290          
 291          void ReadIr() interrupt 0
 292          {
 293   1        u8 j,k;
 294   1        u16 err;
 295   1        Time=0;          
 296   1        delay(700); //7ms
 297   1        if(IRIN==0)   //确认是否真的接收到正确的信号
 298   1        {  
 299   2          
 300   2          err=1000;       //1000*10us=10ms,超过说明接收到错误的信号
 301   2          /*当两个条件都为真是循环，如果有一个条件为假的时候跳出循环，免得程序出错的时
 302   2          侯，程序死在这里*/  
 303   2          while((IRIN==0)&&(err>0)) //等待前面9ms的低电平过去     
C51 COMPILER V9.60.0.0   MAIN                                                              11/05/2021 12:10:48 PAGE 6   

 304   2          {     
 305   3            delay(1);
 306   3            err--;
 307   3          } 
 308   2          if(IRIN==1)     //如果正确等到9ms低电平
 309   2          {
 310   3            err=500;
 311   3            while((IRIN==1)&&(err>0))    //等待4.5ms的起始高电平过去
 312   3            {
 313   4              delay(1);
 314   4              err--;
 315   4            }
 316   3            for(k=0;k<4;k++)    //共有4组数据
 317   3            {       
 318   4              for(j=0;j<8;j++)  //接收一组数据
 319   4              {
 320   5      
 321   5                err=60;   
 322   5                while((IRIN==0)&&(err>0))//等待信号前面的560us低电平过去
 323   5                {
 324   6                  delay(1);
 325   6                  err--;
 326   6                }
 327   5                err=500;
 328   5                while((IRIN==1)&&(err>0))  //计算高电平的时间长度。
 329   5                {
 330   6                  delay(10);   //0.1ms
 331   6                  Time++;
 332   6                  err--;
 333   6                  if(Time>30)
 334   6                  {
 335   7                    return;
 336   7                  }
 337   6                }
 338   5                IrValue[k]>>=1;  //k表示第几组数据
 339   5                if(Time>=8)     //如果高电平出现大于565us，那么是1
 340   5                {
 341   6                  IrValue[k]|=0x80;
 342   6                }
 343   5                Time=0;   //用完时间要重新赋值              
 344   5              }
 345   4            }
 346   3          }
 347   2          if(IrValue[2]!=~IrValue[3])
 348   2          {
 349   3            return;
 350   3          }
 351   2        }     
 352   1      }
 353          
 354          void Timer1() interrupt 3
 355          {
 356   1              IR_TX = ~IR_TX;  //13微秒@11.0592MHz ,产生38KHz载波
 357   1      }
 358          void Timer0() interrupt 1
 359          {
 360   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    862    ----
   CONSTANT SIZE    =     17    ----
C51 COMPILER V9.60.0.0   MAIN                                                              11/05/2021 12:10:48 PAGE 7   

   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     27       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
