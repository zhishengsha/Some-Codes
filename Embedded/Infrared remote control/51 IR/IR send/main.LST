C51 COMPILER V9.60.0.0   MAIN                                                              11/05/2021 11:14:20 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: E:\Work\ST\Keil_51_arm\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          /*****************************************************
   2                  主机：AT89C52  主频为11.0592Mhz   红外NEC协议编码
   3                            编程：wzqwxx 水上人家
   4          ******************************************************/
   5          
   6          #include <REGX52.H>
   7          sbit IR_TX = P2^4;         //定义红外发射端口
   8          
   9          void T0_init()        //初始化定时器0
  10          {
  11   1              TMOD = 0x01;
  12   1              ET0 = 1;
  13   1              EA = 1;
  14   1      }
  15          void T1_Init(void)                //13微秒@11.0592MHz
  16          {
  17   1              TMOD &= 0x0F;                //设置定时器模式
  18   1              TMOD |= 0x20;                //设置定时器模式
  19   1              TL1 = 0xF4;                //设置定时初始值  38KHz
  20   1              TH1 = 0xF4;                //设置定时重载值
  21   1              TF1 = 0;                //清除TF1标志
  22   1              TR1 = 1;                //定时器1开始计时
  23   1      }
  24          
  25          /****中断产生红外发射不同时长延时函数560us 1680us 4500us 9000us*****/
  26          
  27          void IR_TXD_time( unsigned char th0,tl0)
  28          {
  29   1                      TH0 = th0;
  30   1                      TL0 = tl0;
  31   1                      TR0 = 1;  //打开定时器计时
  32   1                      IR_TX = 1;
  33   1                      while(TF0 == 0); //延时，等待产生中断
  34   1                      TF0 = 0;
  35   1                      TR0 = 0;
  36   1                      TR1 = 0;
  37   1                      IR_TX = 1;//结束时拉高发射端口，结束发射
  38   1      }
  39          //倒序
  40          unsigned char Convert_Byte(unsigned char Data) 
  41          {
  42   1      char i;
  43   1      unsigned char Data1;
  44   1      Data1 = Data;
  45   1      Data = 0x00;
  46   1      
  47   1      for(i = 0 ; i<(sizeof(char)*8/2) ; i++)
  48   1      {
  49   2      Data = Data | (Data1&(0X80>>i))>>(7-i*2);
  50   2      Data = Data | (Data1&(0X01<<i))<<(7-i*2);
  51   2      }
  52   1      
  53   1      return  Data;
  54   1      
  55   1      }
C51 COMPILER V9.60.0.0   MAIN                                                              11/05/2021 11:14:20 PAGE 2   

  56          /*********红外发送4字节数据函数**********/
  57          
  58          void IR_Send_4B_Date(unsigned char *p)
  59          {
  60   1              unsigned char i,j;         
  61   1              ET1 = 1; TR1 = 1;        //打开T1中断，产生38KHz频率波，调制产生高电平信号
  62   1              IR_TXD_time(0xdf,0x9a);// 产生9000us信号
  63   1              ET1 = 0;//关闭38KHz频率波，调制产生低电平信号 ，下同
  64   1              IR_TXD_time(0xef,0xcd);//  产生4500us信号
  65   1              for(i = 0 ; i < 4 ; i++)
  66   1              {
  67   2                      for(j = 0x01 ; j != 0 ; j <<= 1)//发送32位数据
  68   2                      {
  69   3                              ET1 = 1; TR1 = 1;
  70   3                              IR_TXD_time(0xfe,0x08);//  产生560us高电平信号
  71   3                              ET1 = 0;
  72   3                              if(*(p+i) & j) //按位与是1则
  73   3                                      IR_TXD_time(0xfa,0x4c);//  产生1680us低电平信号
  74   3                               else
  75   3                                      IR_TXD_time(0xfe,0x3f);//  产生560us低电平信号
  76   3                      }
  77   2              }
  78   1              ET1 = 1;TR1 = 1;
  79   1              IR_TXD_time(0xfd,0xfc);//  产生560us高电平信号，结束32位数据发送
  80   1              ET1 = 0;
  81   1      }
  82          
  83          /*********主函数**********/
  84          
  85          void main()
  86          {
  87   1              unsigned char IR_Data[] = {0x22,0xdd,0x00,0xff}        ;//待发数据
  88   1              unsigned char num;
  89   1              T0_init();
  90   1              T1_Init();
  91   1              while(1)
  92   1              {
  93   2                      P3 = 0x0f;
  94   2                      if(P3 != 0x0f)
  95   2                      {
  96   3                              IR_TXD_time(0x8f,0x9a);// 延时消抖
  97   3                              if(P3 !=0x0f)
  98   3                              {  
  99   4                                      num = P3&0x0f;
 100   4                              }
 101   3      
 102   3                      if(num == 0x0e)           //我家机顶盒的遥控数据，简单测试四个键值
 103   3                        {
 104   4                          IR_Data[2] =Convert_Byte(0xdc)   ; 
 105   4                          IR_Data[3] = ~IR_Data[2];
 106   4                        } //        电源
 107   3                      else if(num == 0x0d)
 108   3                        {
 109   4                          IR_Data[2] = Convert_Byte(0x99)  ; 
 110   4                          IR_Data[3] = ~IR_Data[2];
 111   4                        }//左移
 112   3                      else if(num == 0x0b)
 113   3                        {
 114   4                          IR_Data[2] = Convert_Byte(0xc1)  ; 
 115   4                          IR_Data[3] = ~IR_Data[2];
 116   4                        } //右移
 117   3                      else if(num == 0x07)
C51 COMPILER V9.60.0.0   MAIN                                                              11/05/2021 11:14:20 PAGE 3   

 118   3                        {
 119   4                          IR_Data[2] = Convert_Byte(0xd2)  ; 
 120   4                          IR_Data[3] = ~IR_Data[2];
 121   4                        }  //下翻
 122   3                      IR_Send_4B_Date(IR_Data); //发送
 123   3                      IR_TXD_time(0xff,0x01);// 延时间隔连发
 124   3                      }               
 125   2              }
 126   1      }
 127          void Timer1() interrupt 3
 128          {
 129   1              IR_TX = ~IR_TX;  //13微秒@11.0592MHz ,产生38KHz载波
 130   1      }
 131          void Timer0() interrupt 1
 132          {
 133   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    404    ----
   CONSTANT SIZE    =      4    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      10
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
